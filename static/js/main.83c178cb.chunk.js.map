{"version":3,"sources":["components/ui/Button.js","components/Home.js","components/ui/InputText.js","components/UserContext.js","components/mockData.js","components/Signin.js","components/UserDashboard.js","components/Quiz.js","components/Result.js","components/LayoutUser.js","components/admin/LayoutAdmin.js","components/admin/ui/Button.js","components/admin/AdminDashboard.js","components/admin/ui/InputText.js","components/admin/AdminSignin.js","components/admin/AddNewQuestion.js","components/admin/Results.js","components/admin/ResultDetails.js","components/admin/EditQuestion.js","components/QuestionsNotFound.js","components/App.js","index.js"],"names":["Button","props","buttonStyle","style","onClick","className","value","Home","to","InputText","htmlFor","id","label","onChange","onBlur","name","type","placeholder","UserContext","createContext","users","email","password","userRoles","userId","role","questionBank","title","options","correctOption","isArchived","isModified","Signin","useContext","setUser","user","useState","state","setState","handleChange","e","target","submit","preventDefault","find","userRole","localStorage","setItem","history","push","authorize","toast","error","onSubmit","alert","UserDashboard","renderPreviousResults","getItem","JSON","parse","map","result","timestamp","answers","length","score","pathname","param","Quiz","questions","filter","question","lastQuestionIndex","currentQuestionIndex","setCurrentQuestionIndex","currentQuestion","setCurrentQuestion","response","userAnswers","setUserAnswers","finish","reduce","totalCorrect","userAnswer","today","Date","getDate","getMonth","getFullYear","previousResults","stringify","storeResult","uuid","removeItem","useEffect","renderOptions","option","optionStyle","optionId","userResponse","optionSelected","Result","useParams","renderAnswers","location","answer","correctAnswer","LayoutUser","proceedSignout","children","LayoutAdmin","isAdmin","setIsAdmin","AdminDashboard","setUpdate","renderQuestions","toggleArchive","toggleState","icon","questionCardStyle","update","AdminSignin","AddNewQuestion","setTitle","setCorrectOption","intialOptions","setOptions","handleChangeOptions","newOption","parseInt","newOptions","previousQuestions","storeQuestions","defaultValue","Results","renderResults","userEmail","Answer","EditQuestion","updatedQuestions","ques","updateQuestions","QuestionsNotFound","App","AdminLayout","Provider","path","exact","render","ResultDetails","ReactDOM","StrictMode","document","getElementById"],"mappings":"+MAceA,EAZA,SAACC,GACd,IAAMC,EACY,cAAhBD,EAAME,MACF,wJACA,oIAEN,OACE,wBAAQC,QAASH,EAAMG,QAASC,UAAWH,EAA3C,SACGD,EAAMK,SCMEC,EAZF,WACX,OACE,sBAAKF,UAAU,mEAAf,UACE,qBAAKA,UAAU,4BAAf,uCACA,qBAAKA,UAAU,6BAAf,gCACA,cAAC,IAAD,CAAMG,GAAG,UAAT,SACE,cAAC,EAAD,CAAQF,MAAM,kB,eCWPG,EApBG,SAACR,GACjB,OACE,wBACES,QAAST,EAAMU,GACfN,UAAU,wDAFZ,UAIGJ,EAAMW,MACP,uBACEC,SAAUZ,EAAMY,SAChBC,OAAQb,EAAMa,OACdH,GAAIV,EAAMU,GACVI,KAAMd,EAAMc,KACZC,KAAM,SAAUf,EAAQA,EAAMe,KAAO,OACrCV,MAAOL,EAAMK,MACbD,UAAU,mCACVY,YAAahB,EAAMgB,kBCfdC,EAAcC,wBAAc,MCD5BC,EAAQ,CACnB,CAAET,GAAI,EAAGU,MAAO,kBAAmBC,SAAU,mBAC7C,CAAEX,GAAI,EAAGU,MAAO,iBAAkBC,SAAU,mBAC5C,CAAEX,GAAI,EAAGU,MAAO,kBAAmBC,SAAU,qBAGlCC,EAAY,CACvB,CAAEC,OAAQ,EAAGC,KAAM,SACnB,CAAED,OAAQ,EAAGC,KAAM,QACnB,CAAED,OAAQ,EAAGC,KAAM,SAGRC,EAAe,CAC1B,CACEf,GAAI,mCACJgB,MAAO,qEACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,SAET,CACEK,GAAI,EACJL,MAAO,aAET,CACEK,GAAI,EACJL,MAAO,UAET,CACEK,GAAI,EACJL,MAAO,sBAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,mCACJgB,MAAO,wCACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,KAET,CACEK,GAAI,EACJL,MAAO,KAET,CACEK,GAAI,EACJL,MAAO,KAET,CACEK,GAAI,EACJL,MAAO,MAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,mCACJgB,MAAO,qCACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,SAET,CACEK,GAAI,EACJL,MAAO,WAET,CACEK,GAAI,EACJL,MAAO,QAET,CACEK,GAAI,EACJL,MAAO,YAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,qCACJgB,MAAO,iCACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,QAET,CACEK,GAAI,EACJL,MAAO,OAET,CACEK,GAAI,EACJL,MAAO,UAET,CACEK,GAAI,EACJL,MAAO,SAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,sCACJgB,MAAO,kCACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,UAET,CACEK,GAAI,EACJL,MAAO,WAET,CACEK,GAAI,EACJL,MAAO,cAET,CACEK,GAAI,EACJL,MAAO,kBAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,qCACJgB,MAAO,2DACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,QAET,CACEK,GAAI,EACJL,MAAO,QAET,CACEK,GAAI,EACJL,MAAO,SAET,CACEK,GAAI,EACJL,MAAO,UAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,iCACJgB,MAAO,yCACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,aAET,CACEK,GAAI,EACJL,MAAO,WAET,CACEK,GAAI,EACJL,MAAO,SAET,CACEK,GAAI,EACJL,MAAO,qBAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,mCACJgB,MAAO,sCACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,OAET,CACEK,GAAI,EACJL,MAAO,OAET,CACEK,GAAI,EACJL,MAAO,QAET,CACEK,GAAI,EACJL,MAAO,SAGXuB,cAAe,IACfC,YAAY,EACZC,YAAY,GAEd,CACEpB,GAAI,qCACJgB,MAAO,8CACPC,QAAS,CACP,CACEjB,GAAI,EACJL,MAAO,kBAET,CACEK,GAAI,EACJL,MAAO,gBAET,CACEK,GAAI,EACJL,MAAO,eAET,CACEK,GAAI,EACJL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","file":"static/js/main.83c178cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  const buttonStyle =\r\n    props.style === \"secondary\"\r\n      ? \"px-6 py-3 border border-primary text-primary-darker rounded shadow-lg hover:shadow-none font-medium transition-shadow duration-300 focus:outline-none\"\r\n      : \"px-6 py-3 bg-primary text-white rounded shadow-lg hover:shadow-none font-medium transition-shadow duration-300 focus:outline-none\";\r\n\r\n  return (\r\n    <button onClick={props.onClick} className={buttonStyle}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./ui/Button\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"w-full px-8 py-5 flex flex-col h-96  justify-center items-center\">\r\n      <div className=\"text-2xl sm:text-3xl mb-2\">Take a quiz for no reason</div>\r\n      <div className=\"text-md mb-8 text-gray-600\">Sign in to begin..</div>\r\n      <Link to=\"/signin\">\r\n        <Button value=\"Sign in\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nconst InputText = (props) => {\r\n  return (\r\n    <label\r\n      htmlFor={props.id}\r\n      className=\"flex flex-col py-3 w-full font-semibold text-gray-800\"\r\n    >\r\n      {props.label}\r\n      <input\r\n        onChange={props.onChange}\r\n        onBlur={props.onBlur}\r\n        id={props.id}\r\n        name={props.name}\r\n        type={\"type\" in props ? props.type : \"text\"}\r\n        value={props.value}\r\n        className=\"shadow rounded border-0 p-3 mt-2\"\r\n        placeholder={props.placeholder}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default InputText;\r\n","import { createContext } from \"react\";\r\nexport const UserContext = createContext(null);\r\n","export const users = [\r\n  { id: 1, email: \"admin@qmail.com\", password: \"somethingstrong\" },\r\n  { id: 2, email: \"user@qmail.com\", password: \"somethingstrong\" },\r\n  { id: 3, email: \"user2@qmail.com\", password: \"somethingstrong2\" },\r\n];\r\n\r\nexport const userRoles = [\r\n  { userId: 1, role: \"admin\" },\r\n  { userId: 2, role: \"user\" },\r\n  { userId: 3, role: \"user\" },\r\n];\r\n\r\nexport const questionBank = [\r\n  {\r\n    id: \"4db1f8b-b3-7365-aba-668641630fd5\",\r\n    title: \"What animal has a distinctive scent mark that smells like popcorn?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"Otter\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"Binturong\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"Badger\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"Ring Tailed Lemur\",\r\n      },\r\n    ],\r\n    correctOption: \"2\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"8ac44e5-3e0-2a11-767-0b84fc031b7\",\r\n    title: \"How many types of flamingo are there?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"3\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"4\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"5\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"6\",\r\n      },\r\n    ],\r\n    correctOption: \"4\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"40f7b2f-ec-12c4-4814-f1a0c584776\",\r\n    title: \"Which big cat can run the fastest?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"Tiger\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"Leopard\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"Lion\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"Cheetah\",\r\n      },\r\n    ],\r\n    correctOption: \"4\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"8d4ccf0-fa32-e77e-d361-a7bf255f0db\",\r\n    title: \"What is a baby dolphin called?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"Calf\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"Pup\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"Kitten\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"Foal\",\r\n      },\r\n    ],\r\n    correctOption: \"1\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"157b112-544b-04de-8113-7465f046ae88\",\r\n    title: \"What is a group of rats called?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"A pack\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"A chaos\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"A mischief\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"A destruction\",\r\n      },\r\n    ],\r\n    correctOption: \"3\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"54bef78-8866-eec7-7ed4-88cacdb1a57\",\r\n    title: \"How many Sri Lankan Leopards are there left in the wild?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"1000\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"5000\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"10000\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"20000\",\r\n      },\r\n    ],\r\n    correctOption: \"1\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"408c6-4b0-758-12a7-c62062b73b3\",\r\n    title: \"Which animal can live to 70 years old?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"Orangutan\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"Gorilla\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"Rhino\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"African Elephant\",\r\n      },\r\n    ],\r\n    correctOption: \"4\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"af647b-cce8-5a0-4cb0-edc417346f2\",\r\n    title: \"How many breeds of Gecko are there?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"200\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"500\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"1500\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"2000\",\r\n      },\r\n    ],\r\n    correctOption: \"3\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"c82d3e-4fb6-e88f-c67e-0efa04af80b1\",\r\n    title: \"Who was the first actor to play James Bond?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"George Lazenby\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"Sean Connery\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"Roger Moore\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"Timothy Dalton\",\r\n      },\r\n    ],\r\n    correctOption: \"2\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n  {\r\n    id: \"1426ef1-433-c10c-02c7-32b6067ad73a\",\r\n    title: \"Who voices Elsa in Frozen?\",\r\n    options: [\r\n      {\r\n        id: 1,\r\n        value: \"Kristen Bell\",\r\n      },\r\n      {\r\n        id: 2,\r\n        value: \"Auliʻi Cravalho\",\r\n      },\r\n      {\r\n        id: 3,\r\n        value: \"Mandy Moore\",\r\n      },\r\n      {\r\n        id: 4,\r\n        value: \"Idina Menzel\",\r\n      },\r\n    ],\r\n    correctOption: \"4\",\r\n    isArchived: false,\r\n    isModified: false,\r\n  },\r\n];\r\n","import React, { useState, useContext } from \"react\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Button from \"./ui/Button\";\r\nimport InpuText from \"./ui/InputText\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { users, userRoles } from \"./mockData\";\r\n\r\nconst Signin = (props) => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const [state, setState] = useState({ email: \"\", password: \"\" });\r\n\r\n  function handleChange(e) {\r\n    const value = e.target.value;\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value,\r\n    });\r\n  }\r\n  function authorize(user) {\r\n    localStorage.setItem(\"userId\", user.id);\r\n    setUser({ id: user.id });\r\n\r\n    props.history.push(\"/user\");\r\n  }\r\n\r\n  function submit(e) {\r\n    e.preventDefault();\r\n    if (!state.email || !state.password) {\r\n      toast.error(\"Email or password cannot be empty\");\r\n      return;\r\n    }\r\n\r\n    const user = users.find((user) => user.email === state.email);\r\n    if (user) {\r\n      const userRole = userRoles.find((userRole) => userRole.userId === user.id)\r\n        .role;\r\n      if (user.password == state.password && userRole == \"user\")\r\n        authorize(user);\r\n      else toast.error(\"Invalid email or password\");\r\n    } else toast.error(\"Invalid email or password\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container px-8 py-10 mx-auto flex flex-col justify-center items-center\">\r\n      <Toaster />\r\n      <h2 className=\"text-2xl mb-8\">Sign in to your account</h2>\r\n      <form\r\n        className=\"w-full max-w-sm rounded-md shadow-xl px-6 py-8\"\r\n        onSubmit={(e) => submit(e)}\r\n      >\r\n        <InpuText\r\n          label=\"Email\"\r\n          placeholder=\"johndoe@exampl.com\"\r\n          value={state.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n        />\r\n        <InpuText\r\n          label=\"Password\"\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={state.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n        />\r\n        <div\r\n          className=\"mt-4\r\n        \"\r\n        >\r\n          <Button value=\"Sign In\" />\r\n          <span\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              alert(\"📧: user@qmail.com\\n🔑: somethingstrong\");\r\n            }}\r\n            className=\"ml-3 cursor-pointer hover:text-primary transition-colors duration-300\"\r\n          >\r\n            Forgot Password\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"./ui/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst UserDashboard = () => {\r\n  const { user } = useContext(UserContext);\r\n\r\n  const results = localStorage.getItem(\"results\")\r\n    ? JSON.parse(localStorage.getItem(\"results\"))\r\n    : [];\r\n\r\n  const renderPreviousResults = results.map((result) => {\r\n    if (user && result.userId == user.id) {\r\n      const bgColor = () => {\r\n        if (result.score / result.answers.length < 0.33) return \"bg-red-100\";\r\n        if (result.score / result.answers.length < 0.8) return \"bg-yellow-100\";\r\n        return \"bg-green-100\";\r\n      };\r\n      return (\r\n        <div key={result.id} className=\"w-full md:w-1/3 p-2 text-sm\">\r\n          <div className=\"p-4 shadow-lg rounded-lg\">\r\n            <div className=\"p-3\">\r\n              <span className=\"font-semibold text-gray-600\">Date: </span>\r\n              {result.timestamp}\r\n            </div>\r\n            <div className=\"p-3 bg-gray-100 rounded-md border my-2\">\r\n              <span className=\"font-semibold\">Questions: </span>\r\n              {result.answers.length}\r\n            </div>\r\n\r\n            <div className=\"p-3 bg-gray-100 rounded-md border my-2\">\r\n              <span className=\"font-semibold\">Correct: </span>\r\n              {result.score}\r\n            </div>\r\n            <div className={\"p-3 rounded-md border my-2 \" + bgColor()}>\r\n              <span className=\"font-semibold\">Accuracy: </span>\r\n              {(result.score / result.answers.length) * 100}%\r\n            </div>\r\n            <div className=\"mb-2 mt-6 flex justify-end\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/user/result/${result.id}`,\r\n                  param: { answers: result.answers },\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <Button style=\"secondary\" value=\"View Answers\" />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"container mx-auto px-8 py-8\">\r\n      <div className=\"border-primary border rounded-lg px-4 py-5 mb-8\">\r\n        {localStorage.getItem(\"userAnswers\") ? (\r\n          <div>\r\n            <h2 className=\"text-2xl\"> Your quiz is underway!</h2>\r\n            <p className=\"text-sm pt-2\">Please resume to complete.</p>\r\n            <div\r\n              className=\"flex mt-2 justify-end\r\n          \"\r\n            >\r\n              <Link to=\"/quiz\">\r\n                <Button value=\"Resume\"></Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2 className=\"text-2xl\">Take the quiz now!</h2>\r\n            <p className=\"text-sm pt-2\">\r\n              There will be few multiple choice quiestions like who wants to be\r\n              a millioniare or KBC. You have to finish answering them all within\r\n              unlimited amount of time.\r\n            </p>\r\n            <div\r\n              className=\"flex mt-4 justify-end\r\n          \"\r\n            >\r\n              <Link to=\"/quiz\">\r\n                <Button value=\"Take Quiz\"></Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <h2 className=\"mb-4 text-lg font-semibold\">Previous Quizes</h2>\r\n        <div className=\"flex flex-wrap\">{renderPreviousResults}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport Button from \"./ui/Button\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst Quiz = (props) => {\r\n  const questions = localStorage.getItem(\"questions\")\r\n    ? JSON.parse(localStorage.getItem(\"questions\")).filter(\r\n        (question) => !question.isArchived,\r\n      )\r\n    : [];\r\n\r\n  const { user } = useContext(UserContext);\r\n  const lastQuestionIndex = questions.length - 1;\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(\r\n    questions[currentQuestionIndex],\r\n  );\r\n\r\n  const [userAnswers, setUserAnswers] = useState(\r\n    questions.map((question) => {\r\n      const answer = { id: question.id, response: \"\" };\r\n      return answer;\r\n    }),\r\n  );\r\n\r\n  function next() {\r\n    if (currentQuestionIndex < lastQuestionIndex) {\r\n      setCurrentQuestion(questions[currentQuestionIndex + 1]);\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else return;\r\n  }\r\n\r\n  function previous() {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestion(questions[currentQuestionIndex - 1]);\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    } else return;\r\n  }\r\n\r\n  function finish() {\r\n    const score = userAnswers.reduce((totalCorrect, userAnswer) => {\r\n      const correctOption = questions.find(\r\n        (question) => question.id == userAnswer.id,\r\n      ).correctOption;\r\n      const isCorrect = correctOption == userAnswer.response ? 1 : 0;\r\n      return totalCorrect + isCorrect;\r\n    }, 0);\r\n\r\n    const today = new Date();\r\n    const timestamp =\r\n      today.getDate() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getFullYear();\r\n\r\n    const result = {\r\n      id: uuid(),\r\n      userId: user.id,\r\n      answers: userAnswers,\r\n      score: score,\r\n      timestamp: timestamp,\r\n    };\r\n\r\n    storeResult(result);\r\n\r\n    localStorage.removeItem(\"userAnswers\");\r\n    props.history.push(\"/user\");\r\n  }\r\n\r\n  function storeResult(result) {\r\n    const previousResults = localStorage.getItem(\"results\")\r\n      ? JSON.parse(localStorage.getItem(\"results\"))\r\n      : [];\r\n    localStorage.setItem(\r\n      \"results\",\r\n      JSON.stringify([...previousResults, result]),\r\n    );\r\n  }\r\n\r\n  function optionSelected(optionId) {\r\n    const userResponse = { id: currentQuestion.id, response: optionId };\r\n    setUserAnswers(\r\n      userAnswers.map((userAnswer) => {\r\n        return userAnswer.id == currentQuestion.id\r\n          ? { ...userResponse }\r\n          : userAnswer;\r\n      }),\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"userAnswers\")) {\r\n      setUserAnswers(JSON.parse(localStorage.getItem(\"userAnswers\")));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"userAnswers\", JSON.stringify(userAnswers));\r\n  }, [userAnswers]);\r\n\r\n  const renderOptions = currentQuestion.options.map((option) => {\r\n    const currentQuestionAnswer = userAnswers.find(\r\n      (userAnswer) => userAnswer.id == currentQuestion.id,\r\n    );\r\n\r\n    const optionStyle =\r\n      currentQuestionAnswer.response === option.id\r\n        ? \"bg-primary max-w-2xl w-full text-lg text-white py-4 px-3 my-6 cursor-pointer border border-gray-100 shadow-none transition-all duration-300 rounded-md\"\r\n        : \"max-w-2xl w-full text-lg py-4 px-3 my-6 shadow-md cursor-pointer border border-gray-100 hover:shadow-none hover:border-primary rounded hover:text-primary-darker transition-all duration-300\";\r\n\r\n    return (\r\n      <div\r\n        key={option.id}\r\n        onClick={() => optionSelected(option.id)}\r\n        className={optionStyle}\r\n      >\r\n        {option.value}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-8 py-8\">\r\n      <div className=\"w-full text-xl py-6 font-semibold\">\r\n        <span className=\" text-gray-500\">\r\n          Question {currentQuestionIndex + 1}:\r\n        </span>{\" \"}\r\n        {currentQuestion.title}\r\n      </div>\r\n      <div className=\"w-full text-xl py-6\">{renderOptions}</div>\r\n      <div className=\"w-full flex justify-end py-4\">\r\n        <span className=\"mr-2\">\r\n          <Button\r\n            style=\"secondary\"\r\n            onClick={() => {\r\n              previous();\r\n            }}\r\n            value=\"Previous\"\r\n          />\r\n        </span>\r\n        {currentQuestionIndex === lastQuestionIndex ? (\r\n          <Button\r\n            onClick={() => {\r\n              finish();\r\n            }}\r\n            value=\"Finish\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            onClick={(e) => {\r\n              next();\r\n            }}\r\n            value=\"Next\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Result = (props) => {\r\n  const questions = localStorage.getItem(\"questions\")\r\n    ? JSON.parse(localStorage.getItem(\"questions\"))\r\n    : [];\r\n\r\n  const { id } = useParams();\r\n\r\n  const answers = props.location.param\r\n    ? props.location.param.answers\r\n    : JSON.parse(localStorage.getItem(\"results\")).find(\r\n        (result) => result.id == id,\r\n      ).answers; //Collect values from local storage if props missing\r\n\r\n  const renderAnswers = answers.map((answer) => {\r\n    const question = questions.find((question) => question.id == answer.id);\r\n\r\n    const userAnswer = question.options.find(\r\n      (option) => option.id == answer.response,\r\n    ).value;\r\n\r\n    const correctAnswer = question.options.find(\r\n      (option) => option.id == question.correctOption,\r\n    ).value;\r\n\r\n    return (\r\n      <div key={answer.id} className=\"mb-8 shadow-md rounded-md\">\r\n        <h2 className=\"font-medium p-4 bg-gray-50 border-b rounded-t-md\">\r\n          {question.isModified && (\r\n            <span className=\"text-white bg-yellow-400 rounded p-1 mr-2 font-bold\">\r\n              Modified\r\n            </span>\r\n          )}\r\n          <span className=\"text-gray-600 font-bold\">Question:</span>{\" \"}\r\n          {question.title}\r\n        </h2>\r\n        <div className=\"py-3 px-1\">\r\n          <div className=\"py-1 px-3\">\r\n            <span className=\"text-gray-600 font-medium\">Your Answer: </span>{\" \"}\r\n            {userAnswer}\r\n          </div>\r\n          <div className=\"py-1 px-3\">\r\n            <span className=\"text-primary font-medium\">Correct: </span>{\" \"}\r\n            {correctAnswer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div className=\"container mx-auto px-8 mt-8\">{renderAnswers}</div>;\r\n};\r\n\r\nexport default Result;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst LayoutUser = (props) => {\r\n  const { user, setUser } = useContext(UserContext);\r\n\r\n  function proceedSignout(e) {\r\n    e.preventDefault();\r\n    setUser(null);\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"userAnswers\");\r\n    props.history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"container px-8 py-5 mx-auto flex justify-between\">\r\n        <div className=\"w-1/2 flex justify-start text-3xl\">\r\n          <Link to=\"/\">\r\n            <span className=\"text-primary font-medium\">Q</span>ziland\r\n          </Link>\r\n        </div>\r\n        <div className=\"w-1/2 flex justify-end text-xl\">\r\n          {user && (\r\n            <Link\r\n              to=\"#\"\r\n              className=\"hover:text-primary transition-colors duration-300\"\r\n              onClick={(e) => proceedSignout(e)}\r\n            >\r\n              Sign out\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutUser;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nconst LayoutAdmin = (props) => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  function proceedSignout(e) {\r\n    e.preventDefault();\r\n    setUser(null);\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"userAnswers\");\r\n    props.setIsAdmin(null);\r\n    props.history.push(\"/admin\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"container px-8 py-5 mx-auto flex justify-between\">\r\n        <div className=\"w-1/2 flex justify-start text-3xl\">\r\n          <Link to=\"/admin\">\r\n            <span className=\"text-admin font-medium\">Q</span>ziland\r\n          </Link>\r\n        </div>\r\n        <div className=\"w-1/2 flex justify-end text-xl\">\r\n          {user && props.isAdmin && (\r\n            <>\r\n              <Link\r\n                to=\"/admin/results\"\r\n                className=\"hover:text-admin transition-colors duration-300 mr-4\"\r\n              >\r\n                Results\r\n              </Link>\r\n              <Link\r\n                to=\"#\"\r\n                className=\"hover:text-admin transition-colors duration-300\"\r\n                onClick={(e) => proceedSignout(e)}\r\n              >\r\n                Sign out\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutAdmin;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  const buttonStyle =\r\n    props.style === \"secondary\"\r\n      ? \"px-6 py-3 border border-admin text-admin-darker rounded shadow-lg hover:shadow-none font-medium transition-shadow duration-300 focus:outline-none\"\r\n      : \"px-6 py-3 bg-admin text-white rounded shadow-lg hover:shadow-none font-medium transition-shadow duration-300 focus:outline-none\";\r\n\r\n  return (\r\n    <button onClick={props.onClick} className={buttonStyle}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { useContext, useState } from \"react\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./ui/Button\";\r\nimport { questionBank } from \"../mockData.js\";\r\n\r\nconst AdminDashboard = (props) => {\r\n  const { user } = useContext(UserContext);\r\n  const [update, setUpdate] = useState(0);\r\n\r\n  function seedQuestions() {\r\n    localStorage.setItem(\"questions\", JSON.stringify(questionBank));\r\n    setUpdate((update) => update + 1);\r\n  }\r\n\r\n  const questions = localStorage.getItem(\"questions\")\r\n    ? JSON.parse(localStorage.getItem(\"questions\"))\r\n    : [];\r\n\r\n  const renderQuestions = questions.map((question) => {\r\n    const renderOptions = question.options.map((option) => {\r\n      return (\r\n        <div\r\n          key={option.id}\r\n          className={\r\n            question.correctOption == option.id\r\n              ? \"px-4 py-3 border-b bg-green-50\"\r\n              : \"px-4 py-3 border-b\"\r\n          }\r\n        >\r\n          {option.value}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    function toggleArchive(id, toggleState) {\r\n      if (toggleState)\r\n        toast(\"Question has been archived\", {\r\n          icon: \"📚\",\r\n        });\r\n      else\r\n        toast(\"Question restored\", {\r\n          icon: \"♻\",\r\n        });\r\n      let questions = JSON.parse(localStorage.getItem(\"questions\"));\r\n      let question = questions.find((question) => question.id == id);\r\n      question.isArchived = toggleState;\r\n      localStorage.setItem(\"questions\", JSON.stringify(questions));\r\n    }\r\n\r\n    const questionCardStyle = question.isArchived\r\n      ? \"shadow-md rounded my-6 w-full text-gray-400 italic\"\r\n      : \"shadow-md rounded my-6 w-full\";\r\n    return (\r\n      <div key={question.id} className={questionCardStyle}>\r\n        <div className=\"bg-gray-100  rounded-t px-2 py-4 font-medium justify-between flex border-b-2 border-gray-200\">\r\n          <div className=\"flex justify-center items-center\">\r\n            {question.isArchived && (\r\n              <span className=\"text-white bg-purple-400 rounded p-1 mr-2 font-medium not-italic\">\r\n                Archived\r\n              </span>\r\n            )}\r\n            {question.isModified && (\r\n              <span className=\"text-white bg-yellow-400 rounded p-1 mr-2 font-medium not-italic\">\r\n                Modified\r\n              </span>\r\n            )}\r\n            {question.title}\r\n          </div>\r\n          {!question.isArchived ? (\r\n            <div className=\"flex justify-center items-start\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/edit/${question.id}`,\r\n                  param: { question: question },\r\n                }}\r\n                className=\"p-1 mr-1 rounded bg-white hover:shadow-lg border transition-shadow duration-300\"\r\n              >\r\n                📝\r\n              </Link>\r\n              <Link\r\n                to=\"#\"\r\n                onClick={() => toggleArchive(question.id, true)}\r\n                className=\"p-1 rounded bg-white hover:shadow-lg border transition-shadow duration-300\"\r\n              >\r\n                ❌\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-center items-start\">\r\n              <Link\r\n                to=\"#\"\r\n                onClick={() => toggleArchive(question.id, false)}\r\n                className=\"p-1 rounded bg-white hover:shadow-lg border transition-shadow duration-300 not-italic\"\r\n              >\r\n                ♻\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>{renderOptions}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container px-8 py-8 mx-auto\">\r\n      <Toaster />\r\n      <div className=\"border-admin-darker border rounded-lg px-4 py-5 mb-8\">\r\n        <div>\r\n          <h2 className=\"text-2xl\"> Add New Qustion</h2>\r\n          <p className=\"text-sm pt-2\">\r\n            Click to add new questions to the questioniare\r\n          </p>\r\n          <div\r\n            className=\"flex mt-2 justify-end\r\n          \"\r\n          >\r\n            <Link to=\"/admin/add\">\r\n              <Button value=\"Add New\"></Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-col\">{renderQuestions}</div>\r\n      {!localStorage.getItem(\"questions\") && (\r\n        <div>\r\n          <div></div>\r\n\r\n          <Button\r\n            onClick={(e) => seedQuestions()}\r\n            value=\"Seed\"\r\n            style=\"secondary\"\r\n          ></Button>\r\n\r\n          <span className=\"ml-2\">10 questions from mock data</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React from \"react\";\r\nconst InputText = (props) => {\r\n  return (\r\n    <label\r\n      htmlFor={props.id}\r\n      className=\"flex flex-col py-3 w-full font-semibold text-gray-800\"\r\n    >\r\n      {props.label}\r\n      <input\r\n        onChange={props.onChange}\r\n        onBlur={props.onBlur}\r\n        id={props.id}\r\n        name={props.name}\r\n        type={\"type\" in props ? props.type : \"text\"}\r\n        value={props.value}\r\n        className=\"shadow rounded border-0 p-3 mt-2\"\r\n        placeholder={props.placeholder}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nexport default InputText;\r\n","import React, { useState, useContext } from \"react\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Button from \"./ui/Button\";\r\nimport InpuText from \"./ui/InputText\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { users, userRoles } from \"../mockData\";\r\n\r\nconst AdminSignin = (props) => {\r\n  const { setUser } = useContext(UserContext);\r\n  const [state, setState] = useState({ email: \"\", password: \"\" });\r\n\r\n  function handleChange(e) {\r\n    const value = e.target.value;\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: value,\r\n    });\r\n  }\r\n  function authorize(user) {\r\n    localStorage.setItem(\"userId\", user.id);\r\n    setUser({ id: user.id });\r\n    props.history.push(\"/admin/dashboard\");\r\n  }\r\n\r\n  function submit(e) {\r\n    e.preventDefault();\r\n    if (!state.email || !state.password) {\r\n      toast.error(\"Email or password cannot be empty\");\r\n      return;\r\n    }\r\n\r\n    const user = users.find((user) => user.email === state.email);\r\n    if (user) {\r\n      const userRole = userRoles.find((userRole) => userRole.userId === user.id)\r\n        .role;\r\n      if (user.password == state.password && userRole == \"admin\")\r\n        authorize(user);\r\n      else toast.error(\"Invalid email or password\");\r\n    } else toast.error(\"Invalid email or password\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container px-8 py-10 mx-auto flex flex-col justify-center items-center\">\r\n      <Toaster />\r\n      <h2 className=\"text-2xl mb-8\">Sign in to admin dashboard</h2>\r\n      <form\r\n        className=\"w-full max-w-sm rounded-md shadow-xl px-6 py-8\"\r\n        onSubmit={(e) => submit(e)}\r\n      >\r\n        <InpuText\r\n          label=\"Email\"\r\n          placeholder=\"johndoe@exampl.com\"\r\n          value={state.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n        />\r\n        <InpuText\r\n          label=\"Password\"\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={state.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n        />\r\n        <div\r\n          className=\"mt-4\r\n        \"\r\n        >\r\n          <Button value=\"Sign In\" />\r\n          <span\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              alert(\"📧: admin@qmail.com\\n🔑: somethingstrong\");\r\n            }}\r\n            className=\"ml-3 cursor-pointer hover:text-primary transition-colors duration-300\"\r\n          >\r\n            Forgot Password\r\n          </span>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSignin;\r\n","import React, { useState } from \"react\";\r\nimport InputText from \"./ui/InputText\";\r\nimport Button from \"./ui/Button\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst AddNewQuestion = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [correctOption, setCorrectOption] = useState(\"\");\r\n  const intialOptions = [\r\n    {\r\n      id: 1,\r\n      value: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      value: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      value: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      value: \"\",\r\n    },\r\n  ];\r\n\r\n  const [options, setOptions] = useState(intialOptions);\r\n\r\n  function handleChangeOptions(e) {\r\n    const newOption = { id: parseInt(e.target.name), value: e.target.value };\r\n    const newOptions = options.map((option) =>\r\n      option.id == e.target.name ? newOption : option,\r\n    );\r\n    setOptions(newOptions);\r\n  }\r\n\r\n  function storeQuestions(question) {\r\n    const previousQuestions = localStorage.getItem(\"questions\")\r\n      ? JSON.parse(localStorage.getItem(\"questions\"))\r\n      : [];\r\n    localStorage.setItem(\r\n      \"questions\",\r\n      JSON.stringify([...previousQuestions, question]),\r\n    );\r\n  }\r\n\r\n  function submit(e) {\r\n    e.preventDefault();\r\n    const newQuestion = {\r\n      id: uuid(),\r\n      title: title,\r\n      options: options,\r\n      correctOption: correctOption,\r\n      isArchived: false,\r\n      isModified: false,\r\n    };\r\n    storeQuestions(newQuestion);\r\n    setTitle(\"\");\r\n    setCorrectOption(\"\");\r\n    setOptions(intialOptions);\r\n    props.history.push(\"/admin/dashboard\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-8 py-8\">\r\n      <h2 className=\"mb-8 text-xl font-medium\">Add New Question:</h2>\r\n      <form className=\"w-full max-w-5xl\" onSubmit={(e) => submit(e)}>\r\n        <InputText\r\n          label=\"Question Title:\"\r\n          placeholder=\"What is an infinity loop?\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          name=\"title\"\r\n        />\r\n        <div>\r\n          <div className=\"flex flex-wrap\">\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 1\"\r\n                placeholder=\"Whatever is in option 3\"\r\n                value={options[0].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"1\"\r\n              />\r\n            </div>\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 2\"\r\n                placeholder=\"Whatever is in option 4\"\r\n                value={options[1].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"2\"\r\n              />\r\n            </div>\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 3\"\r\n                placeholder=\"Whatever is in option 2\"\r\n                value={options[2].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"3\"\r\n              />\r\n            </div>\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 4\"\r\n                placeholder=\"Whatever is in option 1\"\r\n                value={options[3].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"4\"\r\n              />\r\n            </div>\r\n\r\n            <label\r\n              htmlFor=\"correctOption\"\r\n              className=\"flex flex-col w-full p-2 font-semibold text-gray-600\"\r\n            >\r\n              Correct Option\r\n              <select\r\n                id=\"correctOption\"\r\n                name=\"correctOption\"\r\n                className=\"shadow rounded border-0 mt-1 p-3 w-1/2\"\r\n                onChange={(e) => setCorrectOption(e.target.value)}\r\n                value={correctOption}\r\n              >\r\n                <option value=\"\" defaultValue>\r\n                  Select\r\n                </option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\" defaultValue>\r\n                  2\r\n                </option>\r\n                <option value=\"3\" defaultValue>\r\n                  3\r\n                </option>\r\n                <option value=\"4\" defaultValue>\r\n                  4\r\n                </option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 px-2\">\r\n          <Button value=\"Submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewQuestion;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./ui/Button\";\r\nimport { users } from \"../mockData\";\r\n\r\nconst Results = () => {\r\n  const { user } = useContext(UserContext);\r\n\r\n  const results = localStorage.getItem(\"results\")\r\n    ? JSON.parse(localStorage.getItem(\"results\"))\r\n    : [];\r\n\r\n  const renderResults = results.map((result) => {\r\n    if (user) {\r\n      const bgColor = () => {\r\n        if (result.score / result.answers.length < 0.33) return \"bg-red-100\";\r\n        if (result.score / result.answers.length < 0.8) return \"bg-yellow-100\";\r\n        return \"bg-green-100\";\r\n      };\r\n      const userEmail = users.find((user) => user.id == result.userId).email;\r\n      return (\r\n        <div key={result.id} className=\"w-full md:w-1/3 p-2 text-sm\">\r\n          <div className=\"p-4 shadow-lg rounded-lg\">\r\n            <div className=\"flex flex-wrap justify-between\">\r\n              <div className=\"p-3 text-admin-darker font-semibold\">\r\n                {userEmail}\r\n              </div>\r\n              <div className=\"p-3\">\r\n                <span className=\"font-semibold text-gray-600\">Date: </span>\r\n                {result.timestamp}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"p-3 bg-gray-100 rounded-md border my-2\">\r\n              <span className=\"font-semibold\">Questions: </span>\r\n              {result.answers.length}\r\n            </div>\r\n\r\n            <div className=\"p-3 bg-gray-100 rounded-md border my-2\">\r\n              <span className=\"font-semibold\">Correct: </span>\r\n              {result.score}\r\n            </div>\r\n            <div className={\"p-3 rounded-md border my-2 \" + bgColor()}>\r\n              <span className=\"font-semibold\">Accuracy: </span>\r\n              {(result.score / result.answers.length) * 100}%\r\n            </div>\r\n            <div className=\"mb-2 mt-6 flex justify-end\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/result/${result.id}`,\r\n                  param: { answers: result.answers },\r\n                }}\r\n              >\r\n                {\" \"}\r\n                <Button style=\"secondary\" value=\"View Answers\" />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"container px-8 pt-8 mx-auto\">\r\n      <div className=\"flex flex-wrap\">{renderResults}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Answer = (props) => {\r\n  const questions = localStorage.getItem(\"questions\")\r\n    ? JSON.parse(localStorage.getItem(\"questions\"))\r\n    : [];\r\n\r\n  const { id } = useParams();\r\n\r\n  const answers = props.location.param\r\n    ? props.location.param.answers\r\n    : JSON.parse(localStorage.getItem(\"results\")).find(\r\n        (result) => result.id == id,\r\n      ).answers; //Collect values from local storage if props missing\r\n\r\n  const renderAnswers = answers.map((answer) => {\r\n    const question = questions.find((question) => question.id == answer.id);\r\n\r\n    const userAnswer = question.options.find(\r\n      (option) => option.id == answer.response,\r\n    ).value;\r\n\r\n    const correctAnswer = question.options.find(\r\n      (option) => option.id == question.correctOption,\r\n    ).value;\r\n\r\n    return (\r\n      <div key={answer.id} className=\"mb-8 shadow-md rounded-md\">\r\n        <h2 className=\"font-medium p-4 bg-gray-50 border-b rounded-t-md\">\r\n          {question.isModified && (\r\n            <span className=\"text-white bg-yellow-400 rounded p-1 mr-2 font-bold\">\r\n              Modified\r\n            </span>\r\n          )}\r\n          <span className=\"text-gray-600 font-bold\">Question:</span>{\" \"}\r\n          {question.title}\r\n        </h2>\r\n        <div className=\"py-3 px-1\">\r\n          <div className=\"py-1 px-3\">\r\n            <span className=\"text-gray-600 font-medium\">Your Answer: </span>{\" \"}\r\n            {userAnswer}\r\n          </div>\r\n          <div className=\"py-1 px-3\">\r\n            <span className=\"text-primary font-medium\">Correct: </span>{\" \"}\r\n            {correctAnswer}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div className=\"container mx-auto px-8 mt-8\">{renderAnswers}</div>;\r\n};\r\n\r\nexport default Answer;\r\n","import React, { useState } from \"react\";\r\nimport InputText from \"./ui/InputText\";\r\nimport Button from \"./ui/Button\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst EditQuestion = (props) => {\r\n  const { id } = useParams();\r\n  const questions = localStorage.getItem(\"questions\")\r\n    ? JSON.parse(localStorage.getItem(\"questions\"))\r\n    : [];\r\n\r\n  let question = props.location.param\r\n    ? props.location.param.question\r\n    : JSON.parse(localStorage.getItem(\"questions\")).find(\r\n        (question) => question.id == id,\r\n      ); //Collect values from local storage if props are not found\r\n\r\n  const [title, setTitle] = useState(question.title);\r\n  const [correctOption, setCorrectOption] = useState(question.correctOption);\r\n\r\n  const [options, setOptions] = useState(question.options);\r\n\r\n  function handleChangeOptions(e) {\r\n    const newOption = { id: parseInt(e.target.name), value: e.target.value };\r\n    const newOptions = options.map((option) =>\r\n      option.id == e.target.name ? newOption : option,\r\n    );\r\n    setOptions(newOptions);\r\n  }\r\n\r\n  function updateQuestions(e, question) {\r\n    e.preventDefault();\r\n\r\n    question.title = title;\r\n    question.options = options;\r\n    question.correctOption = correctOption;\r\n    question.isModified = true;\r\n\r\n    const updatedQuestions = questions.map((ques) =>\r\n      ques.id === question.id ? question : ques,\r\n    );\r\n\r\n    localStorage.setItem(\"questions\", JSON.stringify(updatedQuestions));\r\n\r\n    props.history.push(\"/admin/dashboard\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-8\">\r\n      <h2 className=\"my-8 text-xl font-medium\">Add New Question:</h2>\r\n      <form\r\n        className=\"w-full max-w-5xl\"\r\n        onSubmit={(e) => updateQuestions(e, question)}\r\n      >\r\n        <InputText\r\n          label=\"Question Title:\"\r\n          placeholder=\"What is an infinity loop?\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          name=\"title\"\r\n        />\r\n        <div>\r\n          <div className=\"flex flex-wrap\">\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 1\"\r\n                placeholder=\"Whatever is in option 3\"\r\n                value={options[0].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"1\"\r\n              />\r\n            </div>\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 2\"\r\n                placeholder=\"Whatever is in option 4\"\r\n                value={options[1].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"2\"\r\n              />\r\n            </div>\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 3\"\r\n                placeholder=\"Whatever is in option 2\"\r\n                value={options[2].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"3\"\r\n              />\r\n            </div>\r\n            <div className=\"w-1/2 p-2\">\r\n              <InputText\r\n                label=\"Option 4\"\r\n                placeholder=\"Whatever is in option 1\"\r\n                value={options[3].value}\r\n                onChange={handleChangeOptions}\r\n                name=\"4\"\r\n              />\r\n            </div>\r\n\r\n            <label\r\n              htmlFor=\"correctOption\"\r\n              className=\"flex flex-col w-full p-2 font-semibold text-gray-600\"\r\n            >\r\n              Correct Option\r\n              <select\r\n                id=\"correctOption\"\r\n                name=\"correctOption\"\r\n                className=\"shadow rounded border-0 mt-1 p-3 w-1/2\"\r\n                onChange={(e) => setCorrectOption(e.target.value)}\r\n                value={correctOption}\r\n              >\r\n                <option value=\"\">Select</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n              </select>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 px-2\">\r\n          <Button value=\"Submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditQuestion;\r\n","import React from \"react\";\r\n\r\nconst QuestionsNotFound = () => {\r\n  return (\r\n    <div className=\"px-8 container mx-auto pt-32 text-center\">\r\n      <h2 className=\"text-4xl text-gray mb-5\">The questionnaire is empty!</h2>\r\n      <div className=\"text-gray-600\">\r\n        Please add questions from admin or seed pre-configured question to local\r\n        storage\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsNotFound;\r\n","import React, { useEffect, useState } from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Signin from \"./Signin\";\nimport { UserContext } from \"./UserContext\";\nimport UserDashboard from \"./UserDashboard\";\nimport Quiz from \"./Quiz\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\nimport LayoutUser from \"./LayoutUser\";\n\nimport LayoutAdmin from \"./admin/LayoutAdmin\";\nimport AdminDashboard from \"./admin/AdminDashboard\";\nimport AdminSignin from \"./admin/AdminSignin\";\nimport { userRoles } from \"./mockData\";\nimport AddNewQuestion from \"./admin/AddNewQuestion\";\nimport Results from \"./admin/Results\";\nimport ResultDetails from \"./admin/ResultDetails\";\nimport EditQuestion from \"./admin/EditQuestion\";\nimport QuestionsNotFound from \"./QuestionsNotFound\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    if (!user && localStorage.getItem(\"userId\"))\n      setUser({ id: localStorage.getItem(\"userId\") });\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      const userRole = userRoles.find((userRole) => userRole.userId == user.id)\n        .role;\n      if (userRole == \"admin\") setIsAdmin(true);\n      else setIsAdmin(false);\n    }\n  }, [user]);\n\n  const AdminLayout = (props) => {\n    return (\n      <LayoutAdmin {...props} isAdmin={isAdmin} setIsAdmin={setIsAdmin}>\n        {props.children}\n      </LayoutAdmin>\n    );\n  };\n  return (\n    <div className=\"min-h-screen\">\n      <HashRouter>\n        <UserContext.Provider value={{ user, setUser }}>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={(props) =>\n                !user ? (\n                  <LayoutUser {...props}>\n                    <Home />\n                  </LayoutUser>\n                ) : (\n                  <Redirect to=\"/user\" />\n                )\n              }\n            />\n            <Route\n              path=\"/signin\"\n              exact\n              render={(props) =>\n                !user ? (\n                  <LayoutUser {...props}>\n                    <Signin {...props} />\n                  </LayoutUser>\n                ) : (\n                  <Redirect to=\"/user\" />\n                )\n              }\n            />\n            <Route\n              path=\"/user\"\n              exact\n              render={(props) =>\n                user ? (\n                  <LayoutUser {...props}>\n                    <UserDashboard />\n                  </LayoutUser>\n                ) : (\n                  <Redirect to=\"/\" />\n                )\n              }\n            />\n            <Route\n              path=\"/user/result/:id\"\n              exact\n              render={(props) =>\n                user ? (\n                  <LayoutUser {...props}>\n                    <Result {...props} />\n                  </LayoutUser>\n                ) : (\n                  <Redirect to=\"/\" />\n                )\n              }\n            />\n            <Route\n              path=\"/quiz\"\n              exact\n              render={(props) =>\n                user ? (\n                  localStorage.getItem(\"questions\") ? (\n                    <LayoutUser {...props}>\n                      <Quiz {...props} />\n                    </LayoutUser>\n                  ) : (\n                    <LayoutUser {...props}>\n                      <QuestionsNotFound />\n                    </LayoutUser>\n                  )\n                ) : (\n                  <Redirect to=\"/\" />\n                )\n              }\n            />\n\n            <Route\n              path=\"/admin\"\n              exact\n              render={(props) =>\n                !user || !isAdmin ? (\n                  <AdminLayout {...props}>\n                    <AdminSignin {...props} />\n                  </AdminLayout>\n                ) : (\n                  <Redirect to=\"/admin/dashboard\" />\n                )\n              }\n            />\n            <Route\n              path=\"/admin/dashboard\"\n              exact\n              render={(props) =>\n                user && isAdmin ? (\n                  <AdminLayout {...props}>\n                    <AdminDashboard {...props} />\n                  </AdminLayout>\n                ) : (\n                  <Redirect to=\"/admin\" />\n                )\n              }\n            />\n            <Route\n              path=\"/admin/results\"\n              exact\n              render={(props) =>\n                user && isAdmin ? (\n                  <AdminLayout {...props}>\n                    <Results />\n                  </AdminLayout>\n                ) : (\n                  <Redirect to=\"/admin\" />\n                )\n              }\n            />\n            <Route\n              path=\"/admin/add\"\n              exact\n              render={(props) =>\n                user && isAdmin ? (\n                  <AdminLayout {...props}>\n                    <AddNewQuestion {...props} />\n                  </AdminLayout>\n                ) : (\n                  <Redirect to=\"/admin\" />\n                )\n              }\n            />\n            <Route\n              path=\"/admin/edit/:id\"\n              exact\n              render={(props) =>\n                user && isAdmin ? (\n                  <LayoutAdmin {...props}>\n                    <EditQuestion {...props} />\n                  </LayoutAdmin>\n                ) : (\n                  <Redirect to=\"/admin\" />\n                )\n              }\n            />\n            <Route\n              path=\"/admin/result/:id\"\n              exact\n              render={(props) =>\n                user && isAdmin ? (\n                  <AdminLayout {...props}>\n                    <ResultDetails {...props} />\n                  </AdminLayout>\n                ) : (\n                  <Redirect to=\"/admin\" />\n                )\n              }\n            />\n          </Switch>\n        </UserContext.Provider>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}